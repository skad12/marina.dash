{"ast":null,"code":"import client from \"../api\";\nimport urls from \"../api/urls\";\nexport const getNestedValueFromObject = (obj, target) => {\n  if (!target || !target.split) return null;\n  target = target.split(\".\");\n  let data = obj[target[0]];\n  for (let i = 1; i < target.length; i++) {\n    try {\n      data = data[target[i]];\n    } catch (error) {\n      return null;\n    }\n  }\n  return data;\n};\nexport function objectToFormData(obj, formData = new FormData(), parentKey = null) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      const value = obj[key];\n      const fullKey = parentKey ? `${parentKey}[${key}]` : key;\n      if (typeof value === \"object\" && value !== null && !Array.isArray(value)) {\n        objectToFormData(value, formData, fullKey);\n      } else if (Array.isArray(value)) {\n        value.forEach((item, index) => {\n          objectToFormData(item, formData, `${fullKey}[${index}]`);\n        });\n      } else {\n        formData.append(fullKey, value);\n      }\n    }\n  }\n  return formData;\n}\nexport const excludeFromObject = (fields = [], obj) => {\n  const output = {};\n  Object.keys(obj).forEach(f => {\n    if (!fields.includes(f)) {\n      output[f] = obj[f];\n    }\n  });\n  return output;\n};\nexport const selectFromObject = (fields = [], obj) => {\n  const output = {};\n  fields.forEach(f => {\n    output[f] = obj[f];\n  });\n  return output;\n};\nexport const numberFormatter = (n, pre = \"₦\") => {\n  var _n$toString;\n  return pre + (n === null || n === void 0 ? void 0 : (_n$toString = n.toString()) === null || _n$toString === void 0 ? void 0 : _n$toString.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n};\nexport const getPayUrl = url => {\n  while (url.includes(\"|\")) {\n    url = url.replace(\"|\", \"%7C\");\n  }\n  return url;\n};\nexport const getImageUrl = url => url ? url !== null && url !== void 0 && url.includes(\"http\") || url !== null && url !== void 0 && url.includes(\"file://\") ? url : client.getUri() + urls.files.baseUrl + url : null;\nexport function formatDate(date) {\n  date = new Date(date);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - date) / 1000);\n  const days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // If the date is in the future, return tomorrow or the day and month with year.\n  if (date > now) {\n    const tomorrow = new Date(now);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    if (date.toDateString() === tomorrow.toDateString()) {\n      return \"Tomorrow\";\n    } else {\n      const day = days[date.getDay()];\n      const dayOfMonth = date.getDate();\n      const month = months[date.getMonth()];\n      const year = date.getFullYear();\n      return `${day} ${dayOfMonth}${getDaySuffix(dayOfMonth)} ${month} ${year}`;\n    }\n  }\n\n  // If the date is within the last minute, return 'just now'.\n  if (diffInSeconds <= 10) {\n    return \"Just now\";\n  }\n  if (diffInSeconds <= 60) {\n    const secondsAgo = Math.floor(diffInSeconds);\n    return `${secondsAgo}s ago`;\n  }\n\n  // If the date is within the last hour, return the time difference in seconds.\n  if (diffInSeconds <= 3600) {\n    const secondsAgo = Math.floor(diffInSeconds / 60);\n    return `${secondsAgo}m ago`;\n  }\n  if (diffInSeconds <= 3600 * 24) {\n    const secondsAgo = Math.floor(diffInSeconds / 3600);\n    return `${secondsAgo}h ago`;\n  }\n\n  // If the date is within the last 24 hours (but not today), return 'Yesterday at HH:mm'.\n  const yesterday = new Date(now);\n  yesterday.setDate(yesterday.getDate() - 1);\n  if (date.toDateString() === yesterday.toDateString()) {\n    const hours = padZero(date.getHours());\n    const minutes = padZero(date.getMinutes());\n    return `Yesterday at ${hours}:${minutes}`;\n  }\n\n  // For dates older than yesterday, format like 'Monday 24th July 2023'.\n  const day = days[date.getDay()];\n  const dayOfMonth = date.getDate();\n  const month = months[date.getMonth()];\n  const year = date.getFullYear();\n  return `${day} ${dayOfMonth}${getDaySuffix(dayOfMonth)} ${month} ${year.toString().replace(\"20\", \"\")}`;\n}\n\n// Helper function to add a suffix to the day of the month (e.g., 1st, 2nd, 3rd, 4th).\nfunction getDaySuffix(day) {\n  if (day >= 11 && day <= 13) {\n    return \"th\";\n  }\n  const lastDigit = day % 10;\n  if (lastDigit === 1) {\n    return \"st\";\n  } else if (lastDigit === 2) {\n    return \"nd\";\n  } else if (lastDigit === 3) {\n    return \"rd\";\n  } else {\n    return \"th\";\n  }\n}\n\n// Helper function to add a leading zero to single-digit numbers.\nfunction padZero(number) {\n  return number < 10 ? `0${number}` : number;\n}\nexport const transactionStatuses = {\n  success: \"success\",\n  pending: \"pending\"\n};\nexport const colorPrimary = \"#0c3e83\";\nexport function getDatesBetween(startDate, endDate) {\n  let start = new Date(startDate);\n  let end = new Date(endDate);\n  let dateList = [];\n  for (let dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\n    dateList.push(new Date(dt).toISOString().split(\"T\")[0]);\n  }\n  return dateList;\n}\nexport function getFirstAndLastDateOfMonth() {\n  const today = new Date();\n  const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n  const lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n\n  // Format the dates as YYYY-MM-DD\n  const formattedFirstDay = formatDate_(firstDayOfMonth);\n  const formattedLastDay = formatDate_(lastDayOfMonth);\n  return {\n    firstDay: formattedFirstDay,\n    lastDay: formattedLastDay\n  };\n}\nfunction formatDate_(date) {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n  return `${year}-${month}-${day}`;\n}","map":{"version":3,"names":["client","urls","getNestedValueFromObject","obj","target","split","data","i","length","error","objectToFormData","formData","FormData","parentKey","key","hasOwnProperty","value","fullKey","Array","isArray","forEach","item","index","append","excludeFromObject","fields","output","Object","keys","f","includes","selectFromObject","numberFormatter","n","pre","_n$toString","toString","replace","getPayUrl","url","getImageUrl","getUri","files","baseUrl","formatDate","date","Date","now","diffInSeconds","Math","floor","days","months","tomorrow","setDate","getDate","toDateString","day","getDay","dayOfMonth","month","getMonth","year","getFullYear","getDaySuffix","secondsAgo","yesterday","hours","padZero","getHours","minutes","getMinutes","lastDigit","number","transactionStatuses","success","pending","colorPrimary","getDatesBetween","startDate","endDate","start","end","dateList","dt","push","toISOString","getFirstAndLastDateOfMonth","today","firstDayOfMonth","lastDayOfMonth","formattedFirstDay","formatDate_","formattedLastDay","firstDay","lastDay","padStart"],"sources":["/Users/Dami/Desktop/Projects/dashboard.tiptopapts.com/src/utils/index.js"],"sourcesContent":["import client from \"../api\";\nimport urls from \"../api/urls\";\n\nexport const getNestedValueFromObject = (obj, target) => {\n  if (!target || !target.split) return null;\n  target = target.split(\".\");\n  let data = obj[target[0]];\n  for (let i = 1; i < target.length; i++) {\n    try {\n      data = data[target[i]];\n    } catch (error) {\n      return null;\n    }\n  }\n  return data;\n};\n\nexport function objectToFormData(\n  obj,\n  formData = new FormData(),\n  parentKey = null\n) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      const value = obj[key];\n      const fullKey = parentKey ? `${parentKey}[${key}]` : key;\n\n      if (\n        typeof value === \"object\" &&\n        value !== null &&\n        !Array.isArray(value)\n      ) {\n        objectToFormData(value, formData, fullKey);\n      } else if (Array.isArray(value)) {\n        value.forEach((item, index) => {\n          objectToFormData(item, formData, `${fullKey}[${index}]`);\n        });\n      } else {\n        formData.append(fullKey, value);\n      }\n    }\n  }\n\n  return formData;\n}\n\nexport const excludeFromObject = (fields = [], obj) => {\n  const output = {};\n  Object.keys(obj).forEach((f) => {\n    if (!fields.includes(f)) {\n      output[f] = obj[f];\n    }\n  });\n  return output;\n};\n\nexport const selectFromObject = (fields = [], obj) => {\n  const output = {};\n  fields.forEach((f) => {\n    output[f] = obj[f];\n  });\n  return output;\n};\n\nexport const numberFormatter = (n, pre = \"₦\") =>\n  pre + n?.toString()?.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nexport const getPayUrl = (url) => {\n  while (url.includes(\"|\")) {\n    url = url.replace(\"|\", \"%7C\");\n  }\n  return url;\n};\n\nexport const getImageUrl = (url) =>\n  url\n    ? url?.includes(\"http\") || url?.includes(\"file://\")\n      ? url\n      : client.getUri() + urls.files.baseUrl + url\n    : null;\n\nexport function formatDate(date) {\n  date = new Date(date);\n  const now = new Date();\n  const diffInSeconds = Math.floor((now - date) / 1000);\n  const days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  // If the date is in the future, return tomorrow or the day and month with year.\n  if (date > now) {\n    const tomorrow = new Date(now);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n\n    if (date.toDateString() === tomorrow.toDateString()) {\n      return \"Tomorrow\";\n    } else {\n      const day = days[date.getDay()];\n      const dayOfMonth = date.getDate();\n      const month = months[date.getMonth()];\n      const year = date.getFullYear();\n\n      return `${day} ${dayOfMonth}${getDaySuffix(dayOfMonth)} ${month} ${year}`;\n    }\n  }\n\n  // If the date is within the last minute, return 'just now'.\n  if (diffInSeconds <= 10) {\n    return \"Just now\";\n  }\n  if (diffInSeconds <= 60) {\n    const secondsAgo = Math.floor(diffInSeconds);\n    return `${secondsAgo}s ago`;\n  }\n\n  // If the date is within the last hour, return the time difference in seconds.\n  if (diffInSeconds <= 3600) {\n    const secondsAgo = Math.floor(diffInSeconds / 60);\n    return `${secondsAgo}m ago`;\n  }\n  if (diffInSeconds <= 3600 * 24) {\n    const secondsAgo = Math.floor(diffInSeconds / 3600);\n    return `${secondsAgo}h ago`;\n  }\n\n  // If the date is within the last 24 hours (but not today), return 'Yesterday at HH:mm'.\n  const yesterday = new Date(now);\n  yesterday.setDate(yesterday.getDate() - 1);\n  if (date.toDateString() === yesterday.toDateString()) {\n    const hours = padZero(date.getHours());\n    const minutes = padZero(date.getMinutes());\n    return `Yesterday at ${hours}:${minutes}`;\n  }\n\n  // For dates older than yesterday, format like 'Monday 24th July 2023'.\n  const day = days[date.getDay()];\n  const dayOfMonth = date.getDate();\n  const month = months[date.getMonth()];\n  const year = date.getFullYear();\n\n  return `${day} ${dayOfMonth}${getDaySuffix(dayOfMonth)} ${month} ${year\n    .toString()\n    .replace(\"20\", \"\")}`;\n}\n\n// Helper function to add a suffix to the day of the month (e.g., 1st, 2nd, 3rd, 4th).\nfunction getDaySuffix(day) {\n  if (day >= 11 && day <= 13) {\n    return \"th\";\n  }\n  const lastDigit = day % 10;\n  if (lastDigit === 1) {\n    return \"st\";\n  } else if (lastDigit === 2) {\n    return \"nd\";\n  } else if (lastDigit === 3) {\n    return \"rd\";\n  } else {\n    return \"th\";\n  }\n}\n\n// Helper function to add a leading zero to single-digit numbers.\nfunction padZero(number) {\n  return number < 10 ? `0${number}` : number;\n}\n\nexport const transactionStatuses = { success: \"success\", pending: \"pending\" };\nexport const colorPrimary = \"#0c3e83\";\n\nexport function getDatesBetween(startDate, endDate) {\n  let start = new Date(startDate);\n  let end = new Date(endDate);\n\n  let dateList = [];\n  for (let dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\n    dateList.push(new Date(dt).toISOString().split(\"T\")[0]);\n  }\n  return dateList;\n}\n\nexport function getFirstAndLastDateOfMonth() {\n  const today = new Date();\n  const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n  const lastDayOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n\n  // Format the dates as YYYY-MM-DD\n  const formattedFirstDay = formatDate_(firstDayOfMonth);\n  const formattedLastDay = formatDate_(lastDayOfMonth);\n\n  return { firstDay: formattedFirstDay, lastDay: formattedLastDay };\n}\n\nfunction formatDate_(date) {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  const day = date.getDate().toString().padStart(2, \"0\");\n\n  return `${year}-${month}-${day}`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}