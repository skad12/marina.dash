{"ast":null,"code":"export function getAllDaysBetweenDates(startDate, endDate) {\n  // Create date objects from the input strings\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n\n  // Validate input\n  if (isNaN(start.getTime()) || isNaN(end.getTime())) {\n    console.error(\"Invalid date format\");\n    return [];\n  }\n\n  // Initialize an array to store the days\n  const allDays = [];\n\n  // Loop through each day and push it to the array\n  let currentDay = new Date(start);\n  while (currentDay <= end) {\n    allDays.push(new Date(currentDay));\n    currentDay.setDate(currentDay.getDate() + 1);\n  }\n  return allDays.map(d => {\n    d.setHours(12, 0, 0, 0);\n    return d;\n  });\n}","map":{"version":3,"names":["getAllDaysBetweenDates","startDate","endDate","start","Date","end","isNaN","getTime","console","error","allDays","currentDay","push","setDate","getDate","map","d","setHours"],"sources":["/Users/Dami/Desktop/Projects/dashboard.tiptopapts.com/src/utils/functions.js"],"sourcesContent":["export function getAllDaysBetweenDates(startDate, endDate) {\n  // Create date objects from the input strings\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n\n  // Validate input\n  if (isNaN(start.getTime()) || isNaN(end.getTime())) {\n    console.error(\"Invalid date format\");\n    return [];\n  }\n\n  // Initialize an array to store the days\n  const allDays = [];\n\n  // Loop through each day and push it to the array\n  let currentDay = new Date(start);\n  while (currentDay <= end) {\n    allDays.push(new Date(currentDay));\n    currentDay.setDate(currentDay.getDate() + 1);\n  }\n\n  return allDays.map((d) => {\n    d.setHours(12, 0, 0, 0);\n    return d;\n  });\n}\n"],"mappings":"AAAA,OAAO,SAASA,sBAAsBA,CAACC,SAAS,EAAEC,OAAO,EAAE;EACzD;EACA,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,SAAS,CAAC;EACjC,MAAMI,GAAG,GAAG,IAAID,IAAI,CAACF,OAAO,CAAC;;EAE7B;EACA,IAAII,KAAK,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC,IAAID,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE;IAClDC,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;IACpC,OAAO,EAAE;EACX;;EAEA;EACA,MAAMC,OAAO,GAAG,EAAE;;EAElB;EACA,IAAIC,UAAU,GAAG,IAAIP,IAAI,CAACD,KAAK,CAAC;EAChC,OAAOQ,UAAU,IAAIN,GAAG,EAAE;IACxBK,OAAO,CAACE,IAAI,CAAC,IAAIR,IAAI,CAACO,UAAU,CAAC,CAAC;IAClCA,UAAU,CAACE,OAAO,CAACF,UAAU,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9C;EAEA,OAAOJ,OAAO,CAACK,GAAG,CAAEC,CAAC,IAAK;IACxBA,CAAC,CAACC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvB,OAAOD,CAAC;EACV,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}