{"ast":null,"code":"var _s = $RefreshSig$();\nimport urls from \"../../api/urls\";\nimport { useState } from \"react\";\nimport useAPI from \"./useAPI\";\nimport { toast } from \"react-toastify\";\nfunction useAccounts(props) {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const {\n    get,\n    isLoading,\n    post,\n    patch\n  } = useAPI();\n  const getAccounts = async () => {\n    const {\n      data,\n      error\n    } = await get(urls.profile.baseUrl);\n    if (error) return;\n    setAccounts(data.data.accounts);\n  };\n  const addAccount = async fdata => {\n    const {\n      error,\n      data\n    } = await post(urls.profile.baseUrl, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getAccounts();\n  };\n  const updateAccount = async (id, fdata) => {\n    const {\n      error,\n      data\n    } = await patch(urls.profile.baseUrl + `/${id}`, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getAccounts();\n  };\n  return {\n    accounts,\n    isLoading,\n    getAccounts,\n    addAccount,\n    updateAccount\n  };\n}\n_s(useAccounts, \"NWUpV8IJwzhYEHF8zaniLzB2+GE=\", false, function () {\n  return [useAPI];\n});\nexport default useAccounts;","map":{"version":3,"names":["urls","useState","useAPI","toast","useAccounts","props","_s","accounts","setAccounts","get","isLoading","post","patch","getAccounts","data","error","profile","baseUrl","addAccount","fdata","success","message","updateAccount","id"],"sources":["/Users/Dami/Desktop/Projects/dashboard.tiptopapts.com/src/hooks/api/useAccounts.js"],"sourcesContent":["import urls from \"../../api/urls\";\nimport { useState } from \"react\";\nimport useAPI from \"./useAPI\";\nimport { toast } from \"react-toastify\";\n\nfunction useAccounts(props) {\n  const [accounts, setAccounts] = useState([]);\n  const { get, isLoading, post, patch } = useAPI();\n\n  const getAccounts = async () => {\n    const { data, error } = await get(urls.profile.baseUrl);\n    if (error) return;\n    setAccounts(data.data.accounts);\n  };\n\n  const addAccount = async (fdata) => {\n    const { error, data } = await post(urls.profile.baseUrl, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getAccounts();\n  };\n\n  const updateAccount = async (id, fdata) => {\n    const { error, data } = await patch(urls.profile.baseUrl + `/${id}`, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getAccounts();\n  };\n\n  return {\n    accounts,\n    isLoading,\n    getAccounts,\n    addAccount,\n    updateAccount,\n  };\n}\n\nexport default useAccounts;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEQ,GAAG;IAAEC,SAAS;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGV,MAAM,CAAC,CAAC;EAEhD,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMN,GAAG,CAACT,IAAI,CAACgB,OAAO,CAACC,OAAO,CAAC;IACvD,IAAIF,KAAK,EAAE;IACXP,WAAW,CAACM,IAAI,CAACA,IAAI,CAACP,QAAQ,CAAC;EACjC,CAAC;EAED,MAAMW,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAM;MAAEJ,KAAK;MAAED;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACX,IAAI,CAACgB,OAAO,CAACC,OAAO,EAAEE,KAAK,CAAC;IAC/D,IAAIJ,KAAK,EAAE;IACXZ,KAAK,CAACiB,OAAO,CAACN,IAAI,CAACO,OAAO,CAAC;IAC3BR,WAAW,CAAC,CAAC;EACf,CAAC;EAED,MAAMS,aAAa,GAAG,MAAAA,CAAOC,EAAE,EAAEJ,KAAK,KAAK;IACzC,MAAM;MAAEJ,KAAK;MAAED;IAAK,CAAC,GAAG,MAAMF,KAAK,CAACZ,IAAI,CAACgB,OAAO,CAACC,OAAO,GAAI,IAAGM,EAAG,EAAC,EAAEJ,KAAK,CAAC;IAC3E,IAAIJ,KAAK,EAAE;IACXZ,KAAK,CAACiB,OAAO,CAACN,IAAI,CAACO,OAAO,CAAC;IAC3BR,WAAW,CAAC,CAAC;EACf,CAAC;EAED,OAAO;IACLN,QAAQ;IACRG,SAAS;IACTG,WAAW;IACXK,UAAU;IACVI;EACF,CAAC;AACH;AAAChB,EAAA,CA/BQF,WAAW;EAAA,QAEsBF,MAAM;AAAA;AA+BhD,eAAeE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}