{"ast":null,"code":"var _s = $RefreshSig$();\nimport urls from \"../../api/urls\";\nimport { useState } from \"react\";\nimport useAPI from \"./useAPI\";\nimport { toast } from \"react-toastify\";\nfunction useStaffs(props) {\n  _s();\n  const [staffs, setStaffs] = useState([]);\n  const {\n    get,\n    isLoading,\n    post,\n    patch\n  } = useAPI();\n  const getStaff = async () => {\n    const {\n      data,\n      error\n    } = await get(urls.staffs.baseUrl);\n    if (error) return;\n    setStaffs(data.data.staffs);\n  };\n  const addStaff = async fdata => {\n    const {\n      error,\n      data\n    } = await post(urls.staffs.baseUrl, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getStaff();\n  };\n  const updateStaff = async (id, fdata) => {\n    const {\n      error,\n      data\n    } = await patch(urls.staffs.baseUrl + `/${id}`, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getStaff();\n  };\n  return {\n    staffs,\n    isLoading,\n    getStaff,\n    addStaff,\n    updateStaff\n  };\n}\n_s(useStaffs, \"DwZstPcO1U7oQxJH/mCPANSh164=\", false, function () {\n  return [useAPI];\n});\nexport default useStaffs;","map":{"version":3,"names":["urls","useState","useAPI","toast","useStaffs","props","_s","staffs","setStaffs","get","isLoading","post","patch","getStaff","data","error","baseUrl","addStaff","fdata","success","message","updateStaff","id"],"sources":["/Users/Dami/Desktop/Projects/MARINA/marina.dash/src/hooks/api/useStaffs.js"],"sourcesContent":["import urls from \"../../api/urls\";\nimport { useState } from \"react\";\nimport useAPI from \"./useAPI\";\nimport { toast } from \"react-toastify\";\n\nfunction useStaffs(props) {\n  const [staffs, setStaffs] = useState([]);\n  const { get, isLoading, post, patch } = useAPI();\n\n  const getStaff = async () => {\n    const { data, error } = await get(urls.staffs.baseUrl);\n    if (error) return;\n    setStaffs(data.data.staffs);\n  };\n\n  const addStaff = async (fdata) => {\n    const { error, data } = await post(urls.staffs.baseUrl, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getStaff();\n  };\n\n  const updateStaff = async (id, fdata) => {\n    const { error, data } = await patch(urls.staffs.baseUrl + `/${id}`, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getStaff();\n  };\n\n  return {\n    staffs,\n    isLoading,\n    getStaff,\n    addStaff,\n    updateStaff,\n  };\n}\n\nexport default useStaffs;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEQ,GAAG;IAAEC,SAAS;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGV,MAAM,CAAC,CAAC;EAEhD,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMN,GAAG,CAACT,IAAI,CAACO,MAAM,CAACS,OAAO,CAAC;IACtD,IAAID,KAAK,EAAE;IACXP,SAAS,CAACM,IAAI,CAACA,IAAI,CAACP,MAAM,CAAC;EAC7B,CAAC;EAED,MAAMU,QAAQ,GAAG,MAAOC,KAAK,IAAK;IAChC,MAAM;MAAEH,KAAK;MAAED;IAAK,CAAC,GAAG,MAAMH,IAAI,CAACX,IAAI,CAACO,MAAM,CAACS,OAAO,EAAEE,KAAK,CAAC;IAC9D,IAAIH,KAAK,EAAE;IACXZ,KAAK,CAACgB,OAAO,CAACL,IAAI,CAACM,OAAO,CAAC;IAC3BP,QAAQ,CAAC,CAAC;EACZ,CAAC;EAED,MAAMQ,WAAW,GAAG,MAAAA,CAAOC,EAAE,EAAEJ,KAAK,KAAK;IACvC,MAAM;MAAEH,KAAK;MAAED;IAAK,CAAC,GAAG,MAAMF,KAAK,CAACZ,IAAI,CAACO,MAAM,CAACS,OAAO,GAAI,IAAGM,EAAG,EAAC,EAAEJ,KAAK,CAAC;IAC1E,IAAIH,KAAK,EAAE;IACXZ,KAAK,CAACgB,OAAO,CAACL,IAAI,CAACM,OAAO,CAAC;IAC3BP,QAAQ,CAAC,CAAC;EACZ,CAAC;EAED,OAAO;IACLN,MAAM;IACNG,SAAS;IACTG,QAAQ;IACRI,QAAQ;IACRI;EACF,CAAC;AACH;AAACf,EAAA,CA/BQF,SAAS;EAAA,QAEwBF,MAAM;AAAA;AA+BhD,eAAeE,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}