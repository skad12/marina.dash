{"ast":null,"code":"var _s = $RefreshSig$();\nimport { toast } from \"react-toastify\";\nimport urls from \"../../api/urls\";\nimport { useState } from \"react\";\nimport useAPI from \"./useAPI\";\nfunction useInventory(props) {\n  _s();\n  const [inventory, setInventory] = useState([]);\n  const {\n    get,\n    isLoading,\n    post,\n    patch\n  } = useAPI();\n  const getInventory = async () => {\n    const {\n      data,\n      error\n    } = await get(urls.inventory.baseUrl);\n    if (error) return;\n    setInventory(data.data.inventory);\n  };\n  const addToInventory = async fdata => {\n    const {\n      data,\n      error\n    } = await post(urls.inventory.baseUrl, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getInventory();\n  };\n  const updateInventory = async (id, fdata) => {\n    const {\n      data,\n      error\n    } = await patch(urls.inventory.baseUrl + `/${id}`, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getInventory();\n  };\n  return {\n    isLoading,\n    inventory,\n    getInventory,\n    addToInventory,\n    updateInventory\n  };\n}\n_s(useInventory, \"ve6fAlfUuJoFyxaFfr3zWvT7Jis=\", false, function () {\n  return [useAPI];\n});\nexport default useInventory;","map":{"version":3,"names":["toast","urls","useState","useAPI","useInventory","props","_s","inventory","setInventory","get","isLoading","post","patch","getInventory","data","error","baseUrl","addToInventory","fdata","success","message","updateInventory","id"],"sources":["/Users/Dami/Desktop/Projects/dashboard.tiptopapts.com/src/hooks/api/useInventory.js"],"sourcesContent":["import { toast } from \"react-toastify\";\nimport urls from \"../../api/urls\";\nimport { useState } from \"react\";\nimport useAPI from \"./useAPI\";\n\nfunction useInventory(props) {\n  const [inventory, setInventory] = useState([]);\n  const { get, isLoading, post, patch } = useAPI();\n\n  const getInventory = async () => {\n    const { data, error } = await get(urls.inventory.baseUrl);\n    if (error) return;\n    setInventory(data.data.inventory);\n  };\n\n  const addToInventory = async (fdata) => {\n    const { data, error } = await post(urls.inventory.baseUrl, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getInventory();\n  };\n\n  const updateInventory = async (id, fdata) => {\n    const { data, error } = await patch(\n      urls.inventory.baseUrl + `/${id}`,\n      fdata\n    );\n    if (error) return;\n    toast.success(data.message);\n    getInventory();\n  };\n\n  return {\n    isLoading,\n    inventory,\n    getInventory,\n    addToInventory,\n    updateInventory,\n  };\n}\n\nexport default useInventory;\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,IAAI,MAAM,gBAAgB;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAE7B,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEO,GAAG;IAAEC,SAAS;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGT,MAAM,CAAC,CAAC;EAEhD,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMN,GAAG,CAACR,IAAI,CAACM,SAAS,CAACS,OAAO,CAAC;IACzD,IAAID,KAAK,EAAE;IACXP,YAAY,CAACM,IAAI,CAACA,IAAI,CAACP,SAAS,CAAC;EACnC,CAAC;EAED,MAAMU,cAAc,GAAG,MAAOC,KAAK,IAAK;IACtC,MAAM;MAAEJ,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMJ,IAAI,CAACV,IAAI,CAACM,SAAS,CAACS,OAAO,EAAEE,KAAK,CAAC;IACjE,IAAIH,KAAK,EAAE;IACXf,KAAK,CAACmB,OAAO,CAACL,IAAI,CAACM,OAAO,CAAC;IAC3BP,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMQ,eAAe,GAAG,MAAAA,CAAOC,EAAE,EAAEJ,KAAK,KAAK;IAC3C,MAAM;MAAEJ,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMH,KAAK,CACjCX,IAAI,CAACM,SAAS,CAACS,OAAO,GAAI,IAAGM,EAAG,EAAC,EACjCJ,KACF,CAAC;IACD,IAAIH,KAAK,EAAE;IACXf,KAAK,CAACmB,OAAO,CAACL,IAAI,CAACM,OAAO,CAAC;IAC3BP,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,OAAO;IACLH,SAAS;IACTH,SAAS;IACTM,YAAY;IACZI,cAAc;IACdI;EACF,CAAC;AACH;AAACf,EAAA,CAlCQF,YAAY;EAAA,QAEqBD,MAAM;AAAA;AAkChD,eAAeC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}