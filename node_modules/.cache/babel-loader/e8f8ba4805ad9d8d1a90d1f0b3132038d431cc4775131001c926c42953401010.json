{"ast":null,"code":"var _jsxFileName = \"/Users/Dami/Desktop/Projects/MARINA/marina.dash/src/components/charts/Revenue.jsx\",\n  _s = $RefreshSig$();\nimport { Bar, Line } from \"react-chartjs-2\";\nimport { options, labels } from \".\";\nimport { colorPrimary } from \"../../utils\";\nimport { useState, useEffect } from \"react\";\nimport { baseUrl } from \"../../api/index\";\nimport apartments from \"../../api/urls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst graphType = {\n  line: \"line\",\n  bar: \"bar\"\n};\nfunction Revenue(props) {\n  _s();\n  const [data, getData] = useState([]);\n  const fetchData = async () => {\n    await fetch(`${baseUrl} + ${apartments.baseUrl}`, {\n      method: \"GET\"\n    });\n  };\n  useEffect(() => {}, []);\n  const [type, setTyle] = useState(graphType.bar);\n  const Graph = type === graphType.bar ? Bar : Line;\n  const handleChangeGraph = e => setTyle(e.target.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex inp-rev\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"t-primary\",\n        children: \"Revenue Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"raleway\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Monthly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Yearly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleChangeGraph,\n          className: \"raleway\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bar\",\n            children: \"Bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"line\",\n            children: \"Line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"g-cnt\",\n      children: /*#__PURE__*/_jsxDEV(Graph, {\n        options: {\n          ...options,\n          plugins: {\n            ...options.plugins,\n            legend: {\n              display: false\n            }\n          }\n        },\n        data: {\n          labels: labels.map(a => a.slice(0, 3)),\n          datasets: [{\n            label: \"\",\n            data: labels.map(a => a.slice(0, 3)).map(() => Math.random() * 100),\n            borderColor: colorPrimary,\n            backgroundColor: colorPrimary\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Revenue, \"BB7GM9mFD/fKnU9EKfqnklkO3TA=\");\n_c = Revenue;\nexport default Revenue;\nvar _c;\n$RefreshReg$(_c, \"Revenue\");","map":{"version":3,"names":["Bar","Line","options","labels","colorPrimary","useState","useEffect","baseUrl","apartments","jsxDEV","_jsxDEV","graphType","line","bar","Revenue","props","_s","data","getData","fetchData","fetch","method","type","setTyle","Graph","handleChangeGraph","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","plugins","legend","display","map","a","slice","datasets","label","Math","random","borderColor","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/Dami/Desktop/Projects/MARINA/marina.dash/src/components/charts/Revenue.jsx"],"sourcesContent":["import { Bar, Line } from \"react-chartjs-2\";\nimport { options, labels } from \".\";\nimport { colorPrimary } from \"../../utils\";\nimport { useState, useEffect } from \"react\";\nimport { baseUrl } from \"../../api/index\";\nimport apartments from \"../../api/urls\";\nconst graphType = { line: \"line\", bar: \"bar\" };\n\nfunction Revenue(props) {\n  const [data, getData] = useState([]);\n\n  const fetchData = async () => {\n    await fetch(`${baseUrl} + ${apartments.baseUrl}`, {\n      method: \"GET\",\n    });\n  };\n  useEffect(() => {}, []);\n\n  const [type, setTyle] = useState(graphType.bar);\n  const Graph = type === graphType.bar ? Bar : Line;\n  const handleChangeGraph = (e) => setTyle(e.target.value);\n  return (\n    <div className=\"stat\">\n      <div className=\"flex inp-rev\">\n        <h4 className=\"t-primary\">Revenue Chart</h4>\n        <div className=\"inputs\">\n          <select className=\"raleway\">\n            <option value=\"\">Monthly</option>\n            <option value=\"\">Yearly</option>\n          </select>\n          <select onChange={handleChangeGraph} className=\"raleway\">\n            <option value=\"bar\">Bar</option>\n            <option value=\"line\">Line</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"g-cnt\">\n        <Graph\n          options={{\n            ...options,\n            plugins: {\n              ...options.plugins,\n              legend: {\n                display: false,\n              },\n            },\n          }}\n          data={{\n            labels: labels.map((a) => a.slice(0, 3)),\n            datasets: [\n              {\n                label: \"\",\n                data: labels\n                  .map((a) => a.slice(0, 3))\n                  .map(() => Math.random() * 100),\n                borderColor: colorPrimary,\n                backgroundColor: colorPrimary,\n              },\n            ],\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Revenue;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}