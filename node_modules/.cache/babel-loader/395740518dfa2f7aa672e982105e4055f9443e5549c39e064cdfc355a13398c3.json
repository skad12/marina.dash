{"ast":null,"code":"var _s = $RefreshSig$();\nimport { RequestTypes, responseTypes } from \"../../api/request\";\nimport { toast } from \"react-toastify\";\nimport { useState } from \"react\";\nimport client from \"../../api\";\nfunction useAPI() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const Request = async (type, ...args) => {\n    const response = {\n      error: null,\n      data: null\n    };\n    if (!Object.values(RequestTypes).includes(type)) {\n      response.error = {\n        message: {\n          message: \"Invalid Request Type\"\n        }\n      };\n      return response;\n    }\n    try {\n      setIsLoading(true);\n      const res = await client[type](...args);\n      if (res.data.type === responseTypes.error) {\n        response.error = res.data;\n        return response;\n      }\n      response.data = res.data;\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2;\n      toast.error((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Something went wrong!\");\n      response[\"error\"] = error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n    } finally {\n      setIsLoading(false);\n    }\n    return response;\n  };\n  const get = (...args) => {\n    return Request(RequestTypes.GET, ...args);\n  };\n  const post = (...args) => {\n    return Request(RequestTypes.POST, ...args);\n  };\n  const put = (...args) => {\n    return Request(RequestTypes.PUT, ...args);\n  };\n  const fdelete = (...args) => {\n    return Request(RequestTypes.DELETE, ...args);\n  };\n  const patch = (...args) => {\n    return Request(RequestTypes.PATCH, ...args);\n  };\n  return {\n    isLoading,\n    get,\n    post,\n    put,\n    fdelete,\n    patch,\n    Request\n  };\n}\n_s(useAPI, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\nexport default useAPI;","map":{"version":3,"names":["RequestTypes","responseTypes","toast","useState","client","useAPI","_s","isLoading","setIsLoading","Request","type","args","response","error","data","Object","values","includes","message","res","_error$response","_error$response$data","_error$response2","get","GET","post","POST","put","PUT","fdelete","DELETE","patch","PATCH"],"sources":["/Users/Dami/Desktop/Projects/MARINA/marina.dash/src/hooks/api/useAPI.js"],"sourcesContent":["import { RequestTypes, responseTypes } from \"../../api/request\";\nimport { toast } from \"react-toastify\";\nimport { useState } from \"react\";\nimport client from \"../../api\";\n\nfunction useAPI() {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const Request = async (type, ...args) => {\n    const response = { error: null, data: null };\n    if (!Object.values(RequestTypes).includes(type)) {\n      response.error = { message: { message: \"Invalid Request Type\" } };\n      return response;\n    }\n    try {\n      setIsLoading(true);\n      const res = await client[type](...args);\n      if (res.data.type === responseTypes.error) {\n        response.error = res.data;\n        return response;\n      }\n      response.data = res.data;\n    } catch (error) {\n      toast.error(error?.response?.data?.message || \"Something went wrong!\");\n      response[\"error\"] = error?.response?.data;\n    } finally {\n      setIsLoading(false);\n    }\n    return response;\n  };\n\n  const get = (...args) => {\n    return Request(RequestTypes.GET, ...args);\n  };\n  const post = (...args) => {\n    return Request(RequestTypes.POST, ...args);\n  };\n  const put = (...args) => {\n    return Request(RequestTypes.PUT, ...args);\n  };\n  const fdelete = (...args) => {\n    return Request(RequestTypes.DELETE, ...args);\n  };\n  const patch = (...args) => {\n    return Request(RequestTypes.PATCH, ...args);\n  };\n\n  return {\n    isLoading,\n    get,\n    post,\n    put,\n    fdelete,\n    patch,\n    Request,\n  };\n}\n\nexport default useAPI;\n"],"mappings":";AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,mBAAmB;AAC/D,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,WAAW;AAE9B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMM,OAAO,GAAG,MAAAA,CAAOC,IAAI,EAAE,GAAGC,IAAI,KAAK;IACvC,MAAMC,QAAQ,GAAG;MAAEC,KAAK,EAAE,IAAI;MAAEC,IAAI,EAAE;IAAK,CAAC;IAC5C,IAAI,CAACC,MAAM,CAACC,MAAM,CAAChB,YAAY,CAAC,CAACiB,QAAQ,CAACP,IAAI,CAAC,EAAE;MAC/CE,QAAQ,CAACC,KAAK,GAAG;QAAEK,OAAO,EAAE;UAAEA,OAAO,EAAE;QAAuB;MAAE,CAAC;MACjE,OAAON,QAAQ;IACjB;IACA,IAAI;MACFJ,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMW,GAAG,GAAG,MAAMf,MAAM,CAACM,IAAI,CAAC,CAAC,GAAGC,IAAI,CAAC;MACvC,IAAIQ,GAAG,CAACL,IAAI,CAACJ,IAAI,KAAKT,aAAa,CAACY,KAAK,EAAE;QACzCD,QAAQ,CAACC,KAAK,GAAGM,GAAG,CAACL,IAAI;QACzB,OAAOF,QAAQ;MACjB;MACAA,QAAQ,CAACE,IAAI,GAAGK,GAAG,CAACL,IAAI;IAC1B,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA,IAAAO,eAAA,EAAAC,oBAAA,EAAAC,gBAAA;MACdpB,KAAK,CAACW,KAAK,CAAC,CAAAA,KAAK,aAALA,KAAK,wBAAAO,eAAA,GAALP,KAAK,CAAED,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBN,IAAI,cAAAO,oBAAA,uBAArBA,oBAAA,CAAuBH,OAAO,KAAI,uBAAuB,CAAC;MACtEN,QAAQ,CAAC,OAAO,CAAC,GAAGC,KAAK,aAALA,KAAK,wBAAAS,gBAAA,GAALT,KAAK,CAAED,QAAQ,cAAAU,gBAAA,uBAAfA,gBAAA,CAAiBR,IAAI;IAC3C,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC;IACrB;IACA,OAAOI,QAAQ;EACjB,CAAC;EAED,MAAMW,GAAG,GAAGA,CAAC,GAAGZ,IAAI,KAAK;IACvB,OAAOF,OAAO,CAACT,YAAY,CAACwB,GAAG,EAAE,GAAGb,IAAI,CAAC;EAC3C,CAAC;EACD,MAAMc,IAAI,GAAGA,CAAC,GAAGd,IAAI,KAAK;IACxB,OAAOF,OAAO,CAACT,YAAY,CAAC0B,IAAI,EAAE,GAAGf,IAAI,CAAC;EAC5C,CAAC;EACD,MAAMgB,GAAG,GAAGA,CAAC,GAAGhB,IAAI,KAAK;IACvB,OAAOF,OAAO,CAACT,YAAY,CAAC4B,GAAG,EAAE,GAAGjB,IAAI,CAAC;EAC3C,CAAC;EACD,MAAMkB,OAAO,GAAGA,CAAC,GAAGlB,IAAI,KAAK;IAC3B,OAAOF,OAAO,CAACT,YAAY,CAAC8B,MAAM,EAAE,GAAGnB,IAAI,CAAC;EAC9C,CAAC;EACD,MAAMoB,KAAK,GAAGA,CAAC,GAAGpB,IAAI,KAAK;IACzB,OAAOF,OAAO,CAACT,YAAY,CAACgC,KAAK,EAAE,GAAGrB,IAAI,CAAC;EAC7C,CAAC;EAED,OAAO;IACLJ,SAAS;IACTgB,GAAG;IACHE,IAAI;IACJE,GAAG;IACHE,OAAO;IACPE,KAAK;IACLtB;EACF,CAAC;AACH;AAACH,EAAA,CAnDQD,MAAM;AAqDf,eAAeA,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}