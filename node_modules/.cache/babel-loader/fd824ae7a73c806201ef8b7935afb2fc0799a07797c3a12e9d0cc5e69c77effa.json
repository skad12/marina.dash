{"ast":null,"code":"var _s = $RefreshSig$();\nimport urls from \"../../api/urls\";\nimport { useState } from \"react\";\nimport useAPI from \"./useAPI\";\nimport { toast } from \"react-toastify\";\nfunction useTakss(props) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const {\n    get,\n    isLoading,\n    post,\n    patch\n  } = useAPI();\n  const getTasks = async filter => {\n    const {\n      data,\n      error\n    } = await get(urls.staffs.tasks + (filter ? filter === \"today\" ? \"today=true\" : `completed=${filter === \"completed\" ? true : false}` : \"\"));\n    if (error) return;\n    setTasks(data.data.tasks);\n  };\n  const addTasks = async fdata => {\n    const {\n      error,\n      data\n    } = await post(urls.staffs.tasks, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getTasks(\"today\");\n  };\n  const completeTask = async id => {\n    const {\n      error,\n      data\n    } = await patch(urls.staffs.tasks.replace(\"?\", \"/\") + `${id}`);\n    if (error) return;\n    toast.success(data.message);\n    getTasks(\"today\");\n  };\n  return {\n    tasks,\n    isLoading,\n    getTasks,\n    addTasks,\n    completeTask\n  };\n}\n_s(useTakss, \"qjjJOw1MSRMo1DcNk32zbxpzanw=\", false, function () {\n  return [useAPI];\n});\nexport default useTakss;","map":{"version":3,"names":["urls","useState","useAPI","toast","useTakss","props","_s","tasks","setTasks","get","isLoading","post","patch","getTasks","filter","data","error","staffs","addTasks","fdata","success","message","completeTask","id","replace"],"sources":["/Users/Dami/Desktop/Projects/dashboard.tiptopapts.com/src/hooks/api/useTasks.js"],"sourcesContent":["import urls from \"../../api/urls\";\nimport { useState } from \"react\";\nimport useAPI from \"./useAPI\";\nimport { toast } from \"react-toastify\";\n\nfunction useTakss(props) {\n  const [tasks, setTasks] = useState([]);\n  const { get, isLoading, post, patch } = useAPI();\n\n  const getTasks = async (filter) => {\n    const { data, error } = await get(\n      urls.staffs.tasks +\n        (filter\n          ? filter === \"today\"\n            ? \"today=true\"\n            : `completed=${filter === \"completed\" ? true : false}`\n          : \"\")\n    );\n    if (error) return;\n    setTasks(data.data.tasks);\n  };\n\n  const addTasks = async (fdata) => {\n    const { error, data } = await post(urls.staffs.tasks, fdata);\n    if (error) return;\n    toast.success(data.message);\n    getTasks(\"today\");\n  };\n\n  const completeTask = async (id) => {\n    const { error, data } = await patch(\n      urls.staffs.tasks.replace(\"?\", \"/\") + `${id}`\n    );\n    if (error) return;\n    toast.success(data.message);\n    getTasks(\"today\");\n  };\n\n  return {\n    tasks,\n    isLoading,\n    getTasks,\n    addTasks,\n    completeTask,\n  };\n}\n\nexport default useTakss;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEQ,GAAG;IAAEC,SAAS;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGV,MAAM,CAAC,CAAC;EAEhD,MAAMW,QAAQ,GAAG,MAAOC,MAAM,IAAK;IACjC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMP,GAAG,CAC/BT,IAAI,CAACiB,MAAM,CAACV,KAAK,IACdO,MAAM,GACHA,MAAM,KAAK,OAAO,GAChB,YAAY,GACX,aAAYA,MAAM,KAAK,WAAW,GAAG,IAAI,GAAG,KAAM,EAAC,GACtD,EAAE,CACV,CAAC;IACD,IAAIE,KAAK,EAAE;IACXR,QAAQ,CAACO,IAAI,CAACA,IAAI,CAACR,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMW,QAAQ,GAAG,MAAOC,KAAK,IAAK;IAChC,MAAM;MAAEH,KAAK;MAAED;IAAK,CAAC,GAAG,MAAMJ,IAAI,CAACX,IAAI,CAACiB,MAAM,CAACV,KAAK,EAAEY,KAAK,CAAC;IAC5D,IAAIH,KAAK,EAAE;IACXb,KAAK,CAACiB,OAAO,CAACL,IAAI,CAACM,OAAO,CAAC;IAC3BR,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAM;MAAEP,KAAK;MAAED;IAAK,CAAC,GAAG,MAAMH,KAAK,CACjCZ,IAAI,CAACiB,MAAM,CAACV,KAAK,CAACiB,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,GAAED,EAAG,EAC9C,CAAC;IACD,IAAIP,KAAK,EAAE;IACXb,KAAK,CAACiB,OAAO,CAACL,IAAI,CAACM,OAAO,CAAC;IAC3BR,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;EAED,OAAO;IACLN,KAAK;IACLG,SAAS;IACTG,QAAQ;IACRK,QAAQ;IACRI;EACF,CAAC;AACH;AAAChB,EAAA,CAxCQF,QAAQ;EAAA,QAEyBF,MAAM;AAAA;AAwChD,eAAeE,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}